MultiThreadTemplate is a Java class by Leo Antoli to easily allow solving algorithmic problems concurrently.

This is an example of use for Auction problem: https://www.facebook.com/hackercup/problems.php?pid=215823855164332&round=146094915502528

The algorithm was submitted to FB Hacker Cup 2012 qualification round by Yoichi


These are some examples of execution times in a MacBook Quad Core i7:


AuctionYoichi_11 (single thread):

TOTAL: 57780 ms


MultiThreadAuction (1 THREADS):

TESTS: 20
3350 ms Case #1: 4999680 2
3128 ms Case #2: 2 2
   0 ms Case #3: 3 3
2831 ms Case #4: 41 9999698
8777 ms Case #5: 9070 9070
  18 ms Case #6: 107 108
4753 ms Case #7: 197071402 492678505
  14 ms Case #8: 17423051460046 17423051460048
6697 ms Case #9: 9620 9621
1124 ms Case #10: 2692592 2692593
3251 ms Case #11: 21 15
2860 ms Case #12: 9999679 2
  56 ms Case #13: 20231872523 10115936261
  46 ms Case #14: 15003773831 10002515888
   0 ms Case #15: 758494663875 758494663875
3321 ms Case #16: 36302668 36302668
4649 ms Case #17: 71732735 35866368
2563 ms Case #18: 9999981 2
4402 ms Case #19: 967702028973969107 967702028973969107
10118 ms Case #20: 9745 9745
TOTAL: 62014 ms


MultiThreadAuction (4 THREADS):

TESTS: 20
   1 ms Case #3: 3 3
5322 ms Case #4: 41 9999698
  17 ms Case #6: 107 108
5911 ms Case #1: 4999680 2
6007 ms Case #2: 2 2
 109 ms Case #8: 17423051460046 17423051460048
2125 ms Case #10: 2692592 2692593
10262 ms Case #7: 197071402 492678505
15959 ms Case #11: 21 15
  76 ms Case #13: 20231872523 10115936261
  58 ms Case #14: 15003773831 10002515888
   0 ms Case #15: 758494663875 758494663875
27386 ms Case #5: 9070 9070
22315 ms Case #9: 9620 9621
16508 ms Case #12: 9999679 2
5010 ms Case #18: 9999981 2
11054 ms Case #16: 36302668 36302668
4763 ms Case #19: 967702028973969107 967702028973969107
9793 ms Case #17: 71732735 35866368
7684 ms Case #20: 9745 9745
TOTAL: 41066 ms


MultiThreadAuction (10 THREADS):

TESTS: 20
 163 ms Case #3: 3 3
 288 ms Case #6: 107 108
 353 ms Case #8: 17423051460046 17423051460048
4771 ms Case #13: 20231872523 10115936261
  98 ms Case #14: 15003773831 10002515888
   0 ms Case #15: 758494663875 758494663875
8044 ms Case #10: 2692592 2692593
19740 ms Case #4: 41 9999698
29457 ms Case #2: 2 2
31131 ms Case #12: 9999679 2
37062 ms Case #1: 4999680 2
38754 ms Case #11: 21 15
34473 ms Case #16: 36302668 36302668
35653 ms Case #17: 71732735 35866368
45958 ms Case #9: 9620 9621
28420 ms Case #18: 9999981 2
48949 ms Case #5: 9070 9070
19789 ms Case #19: 967702028973969107 967702028973969107
50446 ms Case #7: 197071402 492678505
20201 ms Case #20: 9745 9745
TOTAL: 51771 ms


MultiThreadAuction (20 THREADS):

TESTS: 20
 150 ms Case #3: 3 3
   2 ms Case #15: 758494663875 758494663875
 349 ms Case #6: 107 108
 482 ms Case #8: 17423051460046 17423051460048
7798 ms Case #13: 20231872523 10115936261
8941 ms Case #14: 15003773831 10002515888
13470 ms Case #10: 2692592 2692593
15536 ms Case #18: 9999981 2
16788 ms Case #4: 41 9999698
18063 ms Case #2: 2 2
17692 ms Case #12: 9999679 2
18270 ms Case #1: 4999680 2
18769 ms Case #11: 21 15
18359 ms Case #16: 36302668 36302668
18598 ms Case #19: 967702028973969107 967702028973969107
21838 ms Case #17: 71732735 35866368
22823 ms Case #7: 197071402 492678505
24648 ms Case #9: 9620 9621
24455 ms Case #20: 9745 9745
26517 ms Case #5: 9070 9070
TOTAL: 26565 ms

